{"version":3,"sources":["models/propTypes.js","components/IconButton.js","components/PageIndicator.js","components/ToolBar.js","components/ImgCaption.js","components/Image.js","components/ImageViewer.js","components/ImagePlaceholder.js","components/ControlButton.js","components/Tooltip.js","components/Thumbnail.js","components/Thumbnails.js","components/Gallery.js","components/SearchableH1.js","App.js","index.js"],"names":["imageProps","PropTypes","shape","id","string","isRequired","description","alt_description","urls","thumb","regular","full","arrayOf","IconButton","icon","onClick","type","PageIndicator","curr","total","className","ToolBar","contain","setContain","index","faArrowsAltH","faArrowsAltV","ImgCaption","title","author","authorLink","href","target","rel","defaultProps","Image","fitContain","src","alt","ImageViewer","image","useState","user","links","html","name","ImagePlaceholder","ControlButton","disabled","Tooltip","text","Thumbnail","onSelect","selected","Thumbnails","loading","images","select","selectedI","map","i","key","Gallery","setSelectedI","navLeft","useCallback","Math","max","navRight","min","length","handleKeyDown","e","code","useEffect","document","addEventListener","removeEventListener","faChevronLeft","faChevronRight","SearchableH1","content","onSubmit","onChange","value","placeholder","onFocus","App","q","setQ","imagesData","photos","results","setImages","setLoading","error","setError","preventDefault","blur","url","URL","searchParams","append","process","fetch","then","res","json","catch","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5c7778b4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst imageProps = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  alt_description: PropTypes.string,\n  urls: PropTypes.shape({\n    thumb: PropTypes.string.isRequired,\n    regular: PropTypes.string.isRequired,\n    full: PropTypes.string.isRequired,\n  }),\n\n});\n\nconst galleryProps = {\n  images: PropTypes.arrayOf(imageProps),\n};\n\nexport {\n  galleryProps,\n  imageProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst IconButton = ({ icon, onClick }) => (\n  <button type=\"button\" onClick={onClick}>\n    <FontAwesomeIcon icon={icon} />\n  </button>\n);\n\nIconButton.propTypes = {\n  icon: FontAwesomeIcon.propTypes.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageIndicator = ({ curr, total }) => (\n  <span className=\"pagination\">\n    {curr + 1}\n    {' '}\n    /\n    {' '}\n    {total}\n  </span>\n);\n\nPageIndicator.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default PageIndicator;\n","import React from 'react';\nimport { faArrowsAltH, faArrowsAltV } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport IconButton from './IconButton';\nimport PageIndicator from './PageIndicator';\n\nconst ToolBar = ({\n  contain, setContain, index, total,\n}) => (\n    // eslint-disable-next-line react/jsx-indent\n    <div className=\"toolBar\">\n      {\n        contain\n          ? <IconButton icon={faArrowsAltH} onClick={() => setContain(false)} />\n          : <IconButton icon={faArrowsAltV} onClick={() => setContain(true)} />\n      }\n      <PageIndicator curr={index} total={total} />\n    </div>\n    // eslint-disable-next-line indent\n  );\n\nToolBar.propTypes = {\n  contain: PropTypes.bool.isRequired,\n  setContain: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default ToolBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImgCaption = ({ title, author, authorLink }) => (\n  <figcaption>\n    <section>\n      <h1>{title || 'Untitled'}</h1>\n      <h2>\n        Photo By\n        {' '}\n        <a href={authorLink} target=\"_blank\" rel=\"noopener noreferrer\">{author}</a>\n      </h2>\n    </section>\n  </figcaption>\n);\n\nImgCaption.propTypes = {\n  title: PropTypes.string,\n  author: PropTypes.string.isRequired,\n  authorLink: PropTypes.string.isRequired,\n};\n\nImgCaption.defaultProps = {\n  title: 'Untitled',\n};\nexport default ImgCaption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Image = ({ fitContain, src, alt }) => (\n  <div className=\"imgContainer\">\n    <div className={`imgWrapper ${fitContain && 'fit-contain'}`}>\n      <img className=\"galleryMainImg\" src={src} alt={alt} />\n    </div>\n  </div>\n);\n\nImage.propTypes = {\n  fitContain: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nImage.defaultProps = {\n  fitContain: false,\n  alt: 'Description not available',\n};\n\nexport default Image;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { imageProps } from '../models/propTypes';\nimport ToolBar from './ToolBar';\nimport ImgCaption from './ImgCaption';\nimport Image from './Image';\n\nconst ImageViewer = ({ image, index, total }) => {\n  const [contain, setContain] = useState(false);\n  return (\n    <figure className=\"imgViewer\">\n      <ToolBar contain={contain} setContain={setContain} index={index} total={total} />\n      <Image src={image.urls.regular} alt={image.alt_description} fitContain={contain} />\n      <ImgCaption\n        title={image.description}\n        authorLink={image.user.links.html}\n        author={image.user.name}\n      />\n    </figure>\n  );\n};\n\nImageViewer.propTypes = {\n  image: imageProps.isRequired,\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default ImageViewer;\n","import React from 'react';\n\nconst ImagePlaceholder = () => <figure className=\"imgViewer loading\"><div className=\"imgContainer\"><div className=\"loader\" /></div></figure>;\n\nexport default ImagePlaceholder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ControlButton = ({ icon, onClick, disabled }) => (\n  <button className=\"galleryController\" type=\"button\" onClick={onClick} disabled={disabled}>\n    <FontAwesomeIcon icon={icon} />\n  </button>\n);\n\nControlButton.propTypes = {\n  icon: FontAwesomeIcon.propTypes.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nControlButton.defaultProps = {\n  disabled: false,\n};\n\nexport default ControlButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tooltip = ({ text }) => (\n  <div className=\"tooltip\">\n    <div className=\"shape\" />\n    <div className=\"content\">{text || 'Untitled'}</div>\n  </div>\n);\n\nTooltip.propTypes = {\n  text: PropTypes.string,\n};\n\nTooltip.defaultProps = {\n  text: 'Untitled',\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { imageProps } from '../models/propTypes';\nimport Tooltip from './Tooltip';\n\nconst Thumbnail = ({ image, onSelect, selected }) => (\n  <li>\n    <button onClick={onSelect} type=\"button\" className={`${selected && 'selected'}`}>\n      <img className=\"thumbnail\" src={image.urls.thumb} alt={image.alt_description} />\n    </button>\n    <div className={`indicator ${selected && 'selected'}`} />\n    <Tooltip text={image.description} />\n  </li>\n);\n\nThumbnail.propTypes = {\n  image: imageProps.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { imageProps } from '../models/propTypes';\nimport Thumbnail from './Thumbnail';\n\nconst Thumbnails = ({\n  loading, images, select, selectedI,\n}) => (\n    // eslint-disable-next-line react/jsx-indent\n    <ul className={`${loading && 'loading'}`}>\n      {images.map((image, i) => (\n        <Thumbnail\n          key={image.id}\n          image={image}\n          onSelect={() => select(i)}\n          selected={selectedI === i}\n        />\n      ))}\n    </ul>\n    // eslint-disable-next-line indent\n  );\n\nThumbnails.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  select: PropTypes.func.isRequired,\n  selectedI: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    imageProps,\n  ).isRequired,\n};\n\nexport default Thumbnails;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nimport { galleryProps } from '../models/propTypes';\nimport ImageViewer from './ImageViewer';\nimport ImagePlaceholder from './ImagePlaceholder';\nimport ControlButton from './ControlButton';\nimport Thumbnails from './Thumbnails';\n\n\nconst Gallery = ({ images, loading }) => {\n  const [selectedI, setSelectedI] = useState(0);\n  const selected = images[selectedI];\n\n  const navLeft = useCallback(() => setSelectedI(Math.max(selectedI - 1, 0)), [selectedI]);\n  const navRight = useCallback(() => setSelectedI(Math.min(selectedI + 1, images.length - 1)),\n    [selectedI, images.length]);\n\n  const handleKeyDown = useCallback((e) => {\n    switch (e.code) {\n      case 'ArrowLeft':\n        navLeft(); break;\n      case 'ArrowRight':\n        navRight(); break;\n      default:\n    }\n  }, [navLeft, navRight]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n\n  return (\n    <main className=\"gallery\">\n      <ControlButton icon={faChevronLeft} onClick={navLeft} disabled={selectedI === 0} />\n      <div className=\"galleryContainer\">\n        {loading\n          ? <ImagePlaceholder />\n          : (\n            <ImageViewer\n              image={selected}\n              index={selectedI}\n              total={images.length}\n              loading={loading}\n            />\n          )}\n\n        <Thumbnails loading={loading} images={images} select={setSelectedI} selectedI={selectedI} />\n      </div>\n      <ControlButton\n        icon={faChevronRight}\n        onClick={navRight}\n        disabled={selectedI === images.length - 1}\n      />\n    </main>\n  );\n};\n\nGallery.propTypes = {\n  ...galleryProps,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Gallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchableH1 = ({ content, onSubmit, onChange }) => (\n  <form onSubmit={onSubmit}>\n    <h1><input type=\"text\" name=\"q\" value={content} placeholder={content} onChange={onChange} onFocus={(e) => e.target.select()} /></h1>\n  </form>\n);\n\nSearchableH1.propTypes = {\n  content: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchableH1;\n","import React, { useState } from 'react';\nimport Gallery from './components/Gallery';\nimport imagesData from './data/images.json';\nimport SearchableH1 from './components/SearchableH1';\n\nfunction App() {\n  const [q, setQ] = useState('Minimal');\n  const [images, setImages] = useState([\n    ...imagesData.photos.results,\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleChange = (e) => {\n    setQ(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.q.blur();\n    const url = new URL('https://api.unsplash.com/search/');\n    url.searchParams.append('query', q);\n    url.searchParams.append('client_id', process.env.REACT_APP_UNSPLASH_API_KEY);\n    setLoading(true);\n    setError('');\n    setImages([]);\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        if (!res.photos.results.length) {\n          setError('Cannot Find Related Images');\n        } else {\n          setImages(res.photos.results);\n          setLoading(false);\n          document.title = `${q} | My Unsplash Gallery`;\n        }\n      })\n      .catch(() => setError('Cannot communicate with Unsplash API'));\n  };\n\n  return (\n    <>\n      <header>\n        <SearchableH1 onSubmit={handleSubmit} onChange={handleChange} content={q} />\n      </header>\n      {\n        error\n          ? <p>{error}</p>\n          : <Gallery images={images} loading={loading} />\n      }\n      <footer>\n        Designed by Ajax | Powered by\n        {' '}\n        <a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Unsplash</a>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './index.mobile.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}