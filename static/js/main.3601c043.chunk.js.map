{"version":3,"sources":["models/propTypes.js","components/Thumbnail.js","components/ToolBar.js","components/ImageViewer.js","components/ImagePlaceholder.js","components/Gallery.js","App.js","index.js"],"names":["imageProps","PropTypes","shape","id","string","isRequired","description","alt_description","urls","thumb","regular","full","Thumbnail","arrayOf","image","onSelect","selected","onClick","type","className","src","alt","ToolBar","contain","setContain","index","total","icon","faArrowsAltH","faArrowsAltV","ImageViewer","useState","href","user","links","html","target","rel","name","ImagePlaceholder","Gallery","images","loading","selectedI","setSelectedI","navLeft","useCallback","Math","max","navRight","min","length","handleKeyDown","e","code","useEffect","document","addEventListener","removeEventListener","disabled","faChevronLeft","map","i","key","faChevronRight","App","q","setQ","imagesData","photos","results","setImages","setLoading","error","setError","onSubmit","preventDefault","blur","url","URL","searchParams","append","process","fetch","then","res","json","title","catch","value","placeholder","onChange","onFocus","select","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3601c043.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst imageProps = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  alt_description: PropTypes.string,\n  urls: PropTypes.shape({\n    thumb: PropTypes.string.isRequired,\n    regular: PropTypes.string.isRequired,\n    full: PropTypes.string.isRequired,\n  }),\n\n});\n\nconst galleryProps = {\n  images: PropTypes.arrayOf(imageProps),\n};\n\nexport {\n  galleryProps,\n  imageProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { imageProps } from '../models/propTypes';\n\nconst Thumbnail = ({ image, onSelect, selected }) => (\n  <li>\n    <button onClick={onSelect} type=\"button\" className={`${selected && 'selected'}`}><img className=\"thumbnail\" src={image.urls.thumb} alt={image.alt_description} /></button>\n    <div className={`indicator ${selected && 'selected'}`} />\n    <div className=\"tooltip\">\n      <div className=\"shape\" />\n      <div className=\"content\">{image.description || 'Untitled'}</div>\n    </div>\n  </li>\n);\n\nThumbnail.propTypes = {\n  image: imageProps.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default Thumbnail;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowsAltH, faArrowsAltV } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nconst ToolBar = ({\n  contain, setContain, index, total,\n}) => (\n    <div className=\"toolBar\">\n      {contain\n        ? (\n          <button type=\"button\" onClick={() => setContain(false)}>\n            <FontAwesomeIcon icon={faArrowsAltH} />\n          </button>\n        )\n        : (\n          <button type=\"button\" onClick={() => setContain(true)}>\n            <FontAwesomeIcon icon={faArrowsAltV} />\n          </button>\n        )}\n      <span className=\"pagination\">\n        {index + 1}\n        {' '}\n        /\n        {' '}\n        {total}\n      </span>\n    </div>\n  );\n\nToolBar.propTypes = {\n  contain: PropTypes.bool.isRequired,\n  setContain: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default ToolBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { imageProps } from '../models/propTypes';\nimport ToolBar from './ToolBar';\n\nconst ImageViewer = ({ image, index, total }) => {\n  const [contain, setContain] = useState(false);\n  return (\n    <figure className=\"imgViewer\">\n      <ToolBar contain={contain} setContain={setContain} index={index} total={total} />\n      <div className=\"imgContainer\">\n        <div className={`imgWrapper ${contain && 'fit-contain'}`}>\n          <img className=\"galleryMainImg\" src={image.urls.regular} alt={image.alt_description} />\n        </div>\n      </div>\n      <figcaption>\n        <section>\n          <h1>{image.description || 'Untitled'}</h1>\n          <h2>\n            Photo By\n            {' '}\n            <a href={image.user.links.html} target=\"_blank\" rel=\"noopener noreferrer\">{image.user.name}</a>\n          </h2>\n        </section>\n      </figcaption>\n    </figure>\n  );\n};\n\nImageViewer.propTypes = {\n  image: imageProps.isRequired,\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default ImageViewer;\n","import React from 'react';\n\nconst ImagePlaceholder = () => <figure className=\"imgViewer loading\"><div className=\"imgContainer\"><div className=\"loader\" /></div></figure>;\n\nexport default ImagePlaceholder;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nimport { galleryProps } from '../models/propTypes';\nimport Thumbnail from './Thumbnail';\nimport ImageViewer from './ImageViewer';\nimport ImagePlaceholder from './ImagePlaceholder';\n\n\nconst Gallery = ({ images, loading }) => {\n  const [selectedI, setSelectedI] = useState(0);\n  const selected = images[selectedI];\n\n  const navLeft = useCallback(() => setSelectedI(Math.max(selectedI - 1, 0)), [selectedI]);\n  const navRight = useCallback(() => setSelectedI(Math.min(selectedI + 1, images.length - 1)),\n    [selectedI, images.length]);\n\n  const handleKeyDown = useCallback((e) => {\n    switch (e.code) {\n      case 'ArrowLeft':\n        navLeft(); break;\n      case 'ArrowRight':\n        navRight(); break;\n      default:\n    }\n  }, [navLeft, navRight]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n\n  return (\n    <main className=\"gallery\">\n      <button className=\"galleryController\" type=\"button\" onClick={navLeft} disabled={selectedI === 0}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <div className=\"galleryContainer\">\n        {loading\n          ? <ImagePlaceholder />\n          : (\n            <ImageViewer\n              image={selected}\n              index={selectedI}\n              total={images.length}\n              loading={loading}\n            />\n          )}\n        <ul className={`${loading && 'loading'}`}>\n          {images.map((image, i) => (\n            <Thumbnail\n              key={image.id}\n              image={image}\n              onSelect={() => setSelectedI(i)}\n              selected={selectedI === i}\n            />\n          ))}\n        </ul>\n      </div>\n      <button className=\"galleryController\" type=\"button\" onClick={navRight} disabled={selectedI === images.length - 1}>\n        <FontAwesomeIcon icon={faChevronRight} />\n      </button>\n    </main>\n  );\n};\n\nGallery.propTypes = {\n  ...galleryProps,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Gallery;\n","import React, { useState } from 'react';\nimport Gallery from './components/Gallery';\nimport imagesData from './data/images.json';\n\nfunction App() {\n  const [q, setQ] = useState('Minimal');\n  const [images, setImages] = useState(imagesData.photos.results);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleChange = (e) => {\n    setQ(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.q.blur();\n    const url = new URL('https://api.unsplash.com/search/');\n    url.searchParams.append('query', q);\n    url.searchParams.append('client_id', process.env.REACT_APP_UNSPLASH_API_KEY);\n    setLoading(true);\n    setError('');\n    setImages([]);\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        if (!res.photos.results.length) {\n          setError('Cannot Find Related Images');\n        } else {\n          setImages(res.photos.results);\n          setLoading(false);\n          document.title = `${q} | My Unsplash Gallery`;\n        }\n      })\n      .catch(() => setError('Cannot communicate with Unsplash API'));\n  };\n\n  return (\n    <>\n      <header>\n        <form onSubmit={handleSubmit}>\n          <h1><input type=\"text\" name=\"q\" value={q} placeholder={q} onChange={handleChange} onFocus={(e) => e.target.select()} /></h1>\n        </form>\n      </header>\n      {\n        error\n          ? <p>{error}</p>\n          : <Gallery images={images} loading={loading} />\n      }\n      <footer>\n        Powered by\n        {' '}\n        <a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Unsplash</a>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}